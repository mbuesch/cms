#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
sys.path.insert(0, "/opt/cms/lib/python3/site-packages/")

import os, fcntl, socket
from cms.socket import *

notify_socket = os.getenv("NOTIFY_SOCKET")
if not notify_socket:
    raise ValueError("env: NOTIFY_SOCKET not set.")
listen_fds = os.getenv("LISTEN_FDS")
if not listen_fds:
    raise ValueError("env: LISTEN_FDS not set.")
listen_fds = int(listen_fds, 10)
if listen_fds <= 0 or listen_fds > 1:
    raise ValueError("env: Invalid LISTEN_FDS.")

with socket.socket(socket.AF_UNIX, socket.SOCK_DGRAM) as sdsock:
    sdsock.connect(notify_socket)
    fd = 3
    for i in range(fd, fd + listen_fds):
        fcntl.fcntl(i, fcntl.F_SETFD, fcntl.FD_CLOEXEC)
    backsock = socket.fromfd(fd, socket.AF_UNIX, socket.SOCK_STREAM)
    sdsock.sendall(b"READY=1")

while True:
    conn, addr = backsock.accept()
    msg = recv_message(conn, MAGIC_BACK)
    assert_is_msg(msg, (MsgGet, MsgPost))
    if isinstance(msg, MsgGet):
        print("GET")
        pass#TODO
    elif isinstance(msg, MsgPost):
        print("POST")
        pass#TODO
    else:
        raise ValueError("Received invalid message.")

# vim: ts=4 sw=4 expandtab
