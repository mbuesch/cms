// -*- coding: utf-8 -*-
//
// Simple CMS
//
// Copyright (C) 2011-2024 Michael BÃ¼sch <m@bues.ch>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

use crate::{
    backend::{CmsGetArgs, CmsReply},
    config::CmsConfig,
};
use chrono::{DateTime, SecondsFormat, Utc};
use std::sync::Arc;

pub struct PageGen<'a> {
    get: &'a CmsGetArgs,
    config: Arc<CmsConfig>,
}

impl<'a> PageGen<'a> {
    pub fn new(get: &'a CmsGetArgs, config: Arc<CmsConfig>) -> Self {
        Self { get, config }
    }

    fn generate_body(&mut self, title: &str, page_content: &str, stamp: &DateTime<Utc>) -> String {
        let url_base = self.config.url_base();

        let nav_root_active_begin;
        let nav_root_active_end;
        if true {
            //TODO
            nav_root_active_begin = r#"<div class="navactive">"#;
            nav_root_active_end = r#"</div> <!-- class="navactive" -->"#;
        } else {
            nav_root_active_begin = "";
            nav_root_active_end = "";
        }
        let nav_home_href = ""; //TODO
        let nav_home_text = ""; //TODO
        let nav = ""; //TODO

        let page_stamp = ""; //TODO
        let page_checker = ""; //TODO

        format!(
            r#"
<div class="titlebar">
    <div class="logo">
        <a href="{url_base}">
            <img alt="logo" src="{url_base}/__images/logo.png" />
        </a>
    </div>
    <div class="title">{title}</div>
</div>

<div class="navbar">
    <div class="navgroups">
        <div class="navhome">
        {nav_root_active_begin}
            <a href="{nav_home_href}">{nav_home_text}</a>
        {nav_root_active_end}
        </div>
        {nav}
    </div>
</div>

<div class="main">

<!-- BEGIN: page content -->
{page_content}
<!-- END: page content -->

{page_stamp}
{page_checker}

</div> <!-- class="main" -->
"#
        )
    }

    pub fn generate(
        &mut self,
        title: &str,
        headers: &str,
        data: &str,
        now: &DateTime<Utc>,
        stamp: &DateTime<Utc>,
    ) -> CmsReply {
        let now = now.to_rfc3339_opts(SecondsFormat::Secs, true);
        let title = title.trim();
        let extra_head = ""; //TODO
        let body = self.generate_body(title, data, stamp);
        let body = body.trim();
        let url_base = self.config.url_base();

        let html = format!(
            r#"<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
    <!--
        Generated by: Simple Rust based CMS
        https://bues.ch/cgit/cms.git/about/
        https://github.com/mbuesch/cms
    -->
    <meta name="generator" content="Simple Rust based CMS" />
    <meta name="date" content="{now}" />
    <meta name="robots" content="all" />
    <title>{title}</title>
    <link rel="stylesheet" href="{url_base}/__css/cms.css" type="text/css" />
    <link rel="sitemap" type="application/xml" title="Sitemap" href="{url_base}/__sitemap.xml" />
    {extra_head}
</head>
<body>
{body}
</body>
</html>
"#
        );

        CmsReply::ok(
            html.into_bytes(),
            "application/xhtml+xml; charset=UTF-8".to_string(),
        )
    }
}

// vim: ts=4 sw=4 expandtab
